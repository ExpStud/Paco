import { FC, SVGProps } from "react";
interface Props extends SVGProps<SVGSVGElement> {
  size: 10 | 14 | 18;
  selectedSize: number;
  handleClick: (size: number) => void;
}

const FontSizeIcon: FC<Props> = (props: Props) => {
  const { selectedSize, size, handleClick } = props;

  if (size === 10) {
    return (
      <svg
        width="9"
        height="9"
        viewBox="0 0 9 9"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onClick={() => handleClick(size)}
      >
        <path
          d="M0.259202 9.00015C0.193373 9.00015 0.131658 8.97553 0.0740577 8.9263C0.0246859 8.86887 0 8.80733 0 8.74169C0 8.70066 0.00411432 8.66374 0.012343 8.63092L2.91294 0.729381C2.93762 0.639125 2.987 0.561176 3.06105 0.495535C3.14334 0.421689 3.25443 0.384766 3.39431 0.384766H5.22107C5.36096 0.384766 5.46793 0.421689 5.54199 0.495535C5.62427 0.561176 5.67776 0.639125 5.70245 0.729381L8.5907 8.63092C8.60716 8.66374 8.61539 8.70066 8.61539 8.74169C8.61539 8.80733 8.58659 8.86887 8.52898 8.9263C8.47961 8.97553 8.4179 9.00015 8.34384 9.00015H6.82566C6.70223 9.00015 6.6076 8.97143 6.54177 8.914C6.48417 8.84836 6.44714 8.79092 6.43068 8.74169L5.94931 7.4863H2.65374L2.1847 8.74169C2.16825 8.79092 2.13122 8.84836 2.07362 8.914C2.01602 8.97143 1.91727 9.00015 1.77739 9.00015H0.259202ZM3.1598 5.714H5.45559L4.29535 2.46477L3.1598 5.714Z"
          fill={selectedSize === 10 ? "black" : "#C0C0C0"}
        />
      </svg>
    );
  }
  if (size === 14) {
    return (
      <svg
        width="12"
        height="12"
        viewBox="0 0 12 12"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onClick={() => handleClick(size)}
      >
        <svg
          width="12"
          height="12"
          viewBox="0 0 12 12"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0.87159 11.9998C0.786953 11.9998 0.707605 11.9681 0.633547 11.9048C0.570069 11.831 0.53833 11.7519 0.53833 11.6675C0.53833 11.6147 0.54362 11.5672 0.5542 11.525L4.28354 1.36593C4.31528 1.24988 4.37875 1.14966 4.47397 1.06527C4.57977 0.970324 4.72259 0.922852 4.90245 0.922852H7.25114C7.43099 0.922852 7.56853 0.970324 7.66374 1.06527C7.76954 1.14966 7.83831 1.24988 7.87005 1.36593L11.5835 11.525C11.6047 11.5672 11.6153 11.6147 11.6153 11.6675C11.6153 11.7519 11.5782 11.831 11.5042 11.9048C11.4407 11.9681 11.3613 11.9998 11.2661 11.9998H9.31417C9.15548 11.9998 9.03381 11.9629 8.94917 11.889C8.87512 11.8046 8.82751 11.7308 8.80635 11.6675L8.18744 10.0534H3.95028L3.34723 11.6675C3.32608 11.7308 3.27847 11.8046 3.20441 11.889C3.13035 11.9629 3.0034 11.9998 2.82354 11.9998H0.87159ZM4.60093 7.77472H7.55266L6.06092 3.59714L4.60093 7.77472Z"
            fill={selectedSize === 14 ? "black" : "#C0C0C0"}
          />
        </svg>
      </svg>
    );
  }

  return (
    <svg
      width="17"
      height="16"
      viewBox="0 0 17 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onClick={() => handleClick(size)}
    >
      <path
        d="M1.01971 16C0.897451 16 0.782838 15.9543 0.675866 15.8629C0.584175 15.7562 0.53833 15.6419 0.53833 15.52C0.53833 15.4438 0.545971 15.3752 0.561253 15.3143L5.94807 0.64C5.99392 0.472381 6.08561 0.327619 6.22314 0.205714C6.37596 0.0685714 6.58227 0 6.84206 0H10.2346C10.4944 0 10.6931 0.0685714 10.8306 0.205714C10.9834 0.327619 11.0827 0.472381 11.1286 0.64L16.4925 15.3143C16.523 15.3752 16.5383 15.4438 16.5383 15.52C16.5383 15.6419 16.4848 15.7562 16.3779 15.8629C16.2862 15.9543 16.1716 16 16.034 16H13.2145C12.9853 16 12.8096 15.9467 12.6873 15.84C12.5804 15.7181 12.5116 15.6114 12.481 15.52L11.587 13.1886H5.4667L4.59564 15.52C4.56507 15.6114 4.49631 15.7181 4.38933 15.84C4.28236 15.9467 4.09898 16 3.83919 16H1.01971ZM6.40653 9.89714H10.6701L8.51541 3.86286L6.40653 9.89714Z"
        fill={selectedSize === 18 ? "black" : "#C0C0C0"}
      />
    </svg>
  );
};

export default FontSizeIcon;
